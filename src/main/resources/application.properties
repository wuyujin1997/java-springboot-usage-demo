spring.application.name=demo

# GET http://localhost:8888/wuyujin/v1/demo/testJson?name=Eugene&age=22
server.port=8888
server.servlet.context-path=/wuyujin

# swagger
# fix `documentationPluginsBootstrapper  NPE`, https://www.jianshu.com/p/1ea987c75073
spring.mvc.pathmatch.matching-strategy=ant-path-matcher


########## wuyujin1997 mysql JDBC + flyway 基本配置  START ##########
# serverTimezone=GMT%2B8 or serverTimezone=GMT+8 ?
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/database_of_wuyujin1997?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=false&serverTimezone=GMT%2B8&autoReconnect=true
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/database_of_wuyujin1997
spring.datasource.username=root
spring.datasource.password=123456

#是否开启flywary，默认true.
spring.flyway.enabled=true
#当迁移时发现目标schema非空，而且带有没有元数据的表时，是否自动执行基准迁移，默认false.
# 如果该数据库里已经有其他表了，要不要迁移？默认为false。改为true可以强制执行。
spring.flyway.baseline-on-migrate=true
# 为防治flyway胆敢删除我们数据库中的表，这里的 clean-disable 一定要设置为 true，即：把 clean动作 给禁止。
spring.flyway.clean-disabled=true
#迁移脚本的位置，默认db/migration.
spring.flyway.locations=classpath:db/migration
spring.flyway.table=flyway_schema_history
########## wuyujin1997 mysql JDBC + flyway 基本配置    END ##########

########## wuyujin1997 mysql JDBC + flyway 额外定制化配置  START ##########

#迁移时使用的JDBC URL，如果没有指定的话，将使用配置的主数据源
spring.flyway.url=${spring.datasource.url}
#迁移数据库的用户名
spring.flyway.user=root
#目标数据库的密码.
spring.flyway.password=${spring.datasource.password}

#是否允许无序的迁移，默认false.
spring.flyway.out-of-order=false
#迁移时是否校验，默认为true
spring.flyway.validate-on-migrate=true
#迁移文件的前缀，默认为V.
spring.flyway.sql-migration-prefix=V
#迁移脚本的文件名分隔符，默认__
spring.flyway.sql-migration-separator=__
#迁移脚本的后缀，默认为.sql
spring.flyway.sql-migration-suffixes=.sql
#设置迁移时的编码，默认UTF-8.
spring.flyway.encoding=UTF-8

# 设定需要flywary迁移的schema，大小写敏感，默认为连接默认的schema.
# 需要 flyway 管控的 schema list,这里我们配置为flyway  缺省的话, 使用spring.datasource.url 配置的那个 schema,
# 可以指定多个schema, 但仅会在第一个schema下建立 metadata 表, 也仅在第一个schema应用migration sql 脚本.
# 但flyway Clean 命令会依次在这些schema下都执行一遍. 所以 确保生产 spring.flyway.clean-disabled 为 true
#spring.flyway.schemas=aaa_demo


## 对执行迁移时基准版本的描述.
#spring.flyway.baseline-description=This is baseline description content.
##开始执行基准迁移时对现有的schema的版本打标签，默认值为1.
#spring.flyway.baseline-version=1
##检查迁移脚本的位置是否存在，默认false.
#spring.flyway.check-location=false
##当发现校验错误时是否自动调用clean，默认false.
#spring.flyway.clean-on-validation-error=false
##当读取元数据表时是否忽略错误的迁移，默认false.
#spring.flyway.ignore-failed-future-migration
##当初始化好连接时要执行的SQL.
#spring.flyway.init-sqls
##设置每个placeholder的前缀，默认${.
#spring.flyway.placeholder-prefix
##是否要被替换，默认true.
#spring.flyway.placeholder-replacementplaceholders
##设置每个placeholder的后缀，默认}.
#spring.flyway.placeholder-suffix
##设置placeholder的value
#spring.flyway.placeholders.[placeholder name]
##使用的元数据表名，默认为schema_version
#spring.flyway.tableflyway
##迁移时使用的目标版本，默认为latest version
#spring.flyway.target
########## wuyujin1997 mysql JDBC + flyway 额外定制化配置    END ##########


########## mybatis START ##########
mybatis.mapper-locations=classpath:/mapper/*.xml
mybatis.type-aliases-package=cn.wuyujin.demo.bean.entity
########## mybatis   END ##########

########## redis START ##########
spring.redis.host=wuyujin.cn
spring.redis.port=6379
spring.redis.password=123456password
spring.redis.database=0
########## redis   END ##########